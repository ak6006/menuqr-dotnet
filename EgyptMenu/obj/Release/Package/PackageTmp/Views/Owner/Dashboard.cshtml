@using EgyptMenu.Views.Shared.Resources
@using Microsoft.AspNet.Identity
@model EgyptMenu.Models.ResMgmtViewModel
@{
    Layout = null;
    if (HttpContext.Current.Session["lang"] != null)
    {
        Culture = UICulture = HttpContext.Current.Session["lang"].ToString();
    }
    else
    {
        Culture = UICulture = "en";
    }
}
<!DOCTYPE html>
<html lang=@Resource.language dir=@Resource.direction>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <meta name="csrf-token" content="veRVSDylh3ujsrmhvS70l9SO2i6OXqcwVJrLkInH">

    <title>QR Menu Maker</title>
    <!-- Favicon -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet">
    <!-- Icons -->
    <script src="https://kit.fontawesome.com/459f34aff4.js" crossorigin="anonymous"></script>

    <link href="~/Content/nucleo.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.css" rel="stylesheet" />

    <!-- Argon CSS -->
    <link href="~/Content/argon.css" rel="stylesheet" />
    <!-- Argon CSS -->
    <link href="~/Content/custom.css" rel="stylesheet" />
    <!-- Select2 -->
    <link href="~/Content/select2.min.css" rel="stylesheet" />

    <!-- Latest compiled and minified CSS -->
    <link href="~/Content/jasny-bootstrap.min.css" rel="stylesheet" />
    <!-- Flatpickr datepicker -->
    <link href="~/Content/flatpickr.min.css" rel="stylesheet" />
    <!-- Chrome for Android theme color -->
    <meta name="theme-color" content="#000000">

    <!-- Add to homescreen for Chrome on Android -->
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="application-name" content="QR Menu Maker">
    <link rel="icon" sizes="256x256" href="android-chrome-256x256.png">

    <!-- Add to homescreen for Safari on iOS -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="QR Menu Maker">
    <link rel="apple-touch-icon" href="android-chrome-256x256.png">


    <link href="/images/icons/splash-640x1136.png" media="(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)" rel="apple-touch-startup-image" />
    <link href="/images/icons/splash-750x1334.png" media="(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2)" rel="apple-touch-startup-image" />
    <link href="/images/icons/splash-1242x2208.png" media="(device-width: 621px) and (device-height: 1104px) and (-webkit-device-pixel-ratio: 3)" rel="apple-touch-startup-image" />
    <link href="/images/icons/splash-1125x2436.png" media="(device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3)" rel="apple-touch-startup-image" />
    <link href="/images/icons/splash-828x1792.png" media="(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2)" rel="apple-touch-startup-image" />
    <link href="/images/icons/splash-1242x2688.png" media="(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3)" rel="apple-touch-startup-image" />
    <link href="/images/icons/splash-1536x2048.png" media="(device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2)" rel="apple-touch-startup-image" />
    <link href="/images/icons/splash-1668x2224.png" media="(device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2)" rel="apple-touch-startup-image" />
    <link href="/images/icons/splash-1668x2388.png" media="(device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2)" rel="apple-touch-startup-image" />
    <link href="/images/icons/splash-2048x2732.png" media="(device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2)" rel="apple-touch-startup-image" />

    <!-- Tile for Win8 -->
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="android-chrome-256x256.png">

    <!-- Custom CSS defined by admin -->
    <link href="~/Content/back.css" rel="stylesheet" />
    <style type="text/css">
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */

        #map {
            height: 80%;
            top: 600;
            width: 80%;
        }

        /* Optional: Makes the sample page fill the window. */
        html,
        body {
            height: 100%;
            /* margin:200;
         padding: 400;
         top: 300; */
        }

        #description {
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
        }

        #infowindow-content .title {
            font-weight: bold;
        }

        #infowindow-content {
            display: none;
        }

        #map #infowindow-content {
            display: inline;
            /* height: 800px; */
        }

        .pac-card {
            margin: 10px 10px 0 0;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            background-color: #fff;
            font-family: Roboto;
        }

        #pac-container {
            padding-bottom: 12px;
            margin-right: 12px;
        }

        .pac-controls {
            display: inline-block;
            padding: 5px 11px;
        }

            .pac-controls label {
                font-family: Roboto;
                font-size: 13px;
                font-weight: 300;
            }

        #pac-input {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 400px;
        }

            #pac-input:focus {
                border-color: #4d90fe;
            }

        #title {
            color: #fff;
            background-color: #4d90fe;
            font-size: 25px;
            font-weight: 500;
            padding: 6px 12px;
        }
    </style>

</head>
<body class="">

    <nav class="navbar navbar-vertical  navbar-expand-md navbar-light bg-white @Resource.fixed_dir" id="sidenav-main">
        <div class="container-fluid">
            <!-- Toggler -->
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#sidenav-collapse-main" aria-controls="sidenav-main" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <!-- Brand -->
            <a class="navbar-brand pt-0" href="/">
                <img src="~/Content/images/logo_qrzebra.png" class="navbar-brand-img" alt="...">

            </a>
            <!-- User -->
            <ul class="nav align-items-center d-md-none">
                <li class="nav-item dropdown">
                    <a class="nav-link" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <div class="media align-items-center">
                            <span class="avatar avatar-sm rounded-circle">


                                <img alt="..." src="https://www.gravatar.com/avatar/4cb1f144288e5d61695b0d3f9c63835c">
                            </span>
                        </div>
                    </a>
                    <div class="dropdown-menu dropdown-menu-arrow @Resource.dropdown_menu_right" style="@Resource.text_align">
                        <div class=" dropdown-header noti-title">
                            <h6 class="text-overflow m-0">@Resource.Welcome</h6>
                        </div>
                        <a href="@Url.Action("Profile", "Owner")" class="dropdown-item">
                            <i class="fas fa-user-alt"></i>
                            <span>@Resource.My_profile</span>
                        </a>
                        <div class="dropdown-divider"></div>

                        @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                        {
                            @Html.AntiForgeryToken()

                            <button type="submit" class="dropdown-item">@Resource.Log_out</button>
                        }
                    </div>
                </li>
            </ul>
            <!-- Collapse -->
            <div dir=@Resource.direction class="collapse navbar-collapse" id="sidenav-collapse-main">
                <!-- Collapse header -->
                <div class="navbar-collapse-header d-md-none">
                    <div class="row">
                        <div class="col-6 collapse-brand">
                            <a href="#">
                                <img src="/uploads/settings/75fc3af3-2f85-4f6d-b745-63428c2bd4d8_logo.jpg">
                            </a>
                        </div>
                        <div class="col-6 collapse-close">
                            <button type="button" class="navbar-toggler" data-toggle="collapse" data-target="#sidenav-collapse-main" aria-controls="sidenav-main" aria-expanded="false" aria-label="Toggle sidenav">
                                <span></span>
                                <span></span>
                            </button>
                        </div>
                    </div>
                </div>
                <!-- Navigation -->
                <span></span>

                <span></span>

                <ul class="navbar-nav" style="padding:0;">

                    <li class="nav-item">
                        <a class="nav-link" href=@Url.Action("Dashboard")>
                            <i class="fas fa-store-alt text-primary "></i>
                            &nbsp;&nbsp;@Resource.Restaurant
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href=@Url.Action("Menu")>
                            <i class="far fa-minus-square text-pink"></i>&nbsp;&nbsp;@Resource.Menu
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href=@Url.Action("QRBuilder")>
                            <i class="fas fa-mobile-alt text-red"></i>&nbsp;&nbsp;@Resource.QR_builder
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href=@Url.Action("Plan")>
                            <i class="fas fa-credit-card text-orange"></i>&nbsp;&nbsp;@Resource.Plan
                        </a>
                    </li>
                </ul>

                <span></span>


                <!-- Divider -->
                <hr class="my-3">
                <!-- Heading -->

            </div>
        </div>
    </nav>

    <div class="main-content">
        <!-- Top navbar -->
        <nav class="navbar navbar-top navbar-expand-md  navbar-dark" id="navbar-main">
            <div class="container-fluid">

                <!-- Brand -->
                <a class="h4 mb-0 text-white text-uppercase d-none d-lg-inline-block">
                    @Resource.RESTAURANT_MANAGEMENT
                </a>

                <!-- Form -->
                <form method="GET" class="navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto">
                </form>

                <!-- User -->
                <ul class="navbar-nav align-items-center d-none d-md-flex">

                    <li class="nav-item dropdown">
                        <a class="nav-link pr-0" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <div class="media align-items-center">
                                <span class="avatar avatar-sm rounded-circle">

                                    <img id="profile-image-nav" alt="..." src="https://www.gravatar.com/avatar/4cb1f144288e5d61695b0d3f9c63835c">
                                </span>
                                <div class="media-body ml-2 d-none d-lg-block">
                                    <span class="mb-0 text-sm  font-weight-bold">@User.Identity.GetUserName()</span>
                                </div>
                            </div>
                        </a>
                        <div class="dropdown-menu dropdown-menu-arrow @Resource.dropdown_menu_right" style="@Resource.text_align">
                            <div class=" dropdown-header noti-title">
                                <h6 class="text-overflow m-0">@Resource.Welcome</h6>
                            </div>
                            <a href="@Url.Action("Profile", "Owner")" class="dropdown-item">

                                <span><i class="fas fa-user"></i> &nbsp;&nbsp;&nbsp; @Resource.My_profile</span>
                            </a>
                            <div class="dropdown-divider"></div>
                            @*<a href="http://localhost/logout" class="dropdown-item" onclick="event.preventDefault();
                                document.getElementById('logout-form').submit();">
                                            <i class="ni ni-user-run"></i>
                                            <span>Logout</span>
                                        </a>*@
                            @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                            {
                                @Html.AntiForgeryToken()
                                <button type="submit" class="dropdown-item"><i class="fas fa-running" style="margin:0;"></i> &nbsp;&nbsp;&nbsp; @Resource.Log_out</button>
                            }
                        </div>
                    </li>
                </ul>

            </div>

        </nav>

        <div class="header bg-gradient-primary pb-8 pt-5 pt-md-8">
        </div>
        <div class="container-fluid mt--7" style="@Resource.text_align ">
            <div class="row">
                <div class="col-xl-6">
                    <br />
                    <div class="card bg-secondary shadow">
                        <div class="card-header bg-white border-0">
                            <div class="row align-items-center">
                                <div class="col-8">
                                    <h3 class="mb-0">@Resource.Restaurant_Management_sm</h3>
                                </div>
                                <div class="col-4 text-center">

                                    <a target="_blank" href="@Url.Action("Restaurant","Owner",new { name = Model.RestaurantName })" class="btn btn-sm btn-success">@Resource.View_it</a>

                                </div>

                            </div>
                        </div>
                        <div class="card-body">
                            <h6 class="heading-small text-muted mb-4">@Resource.Restaurant_information</h6>
                            <div class="pl-lg-4">
                                @using (Html.BeginForm("EditRestaurant", "Owner", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    <div style="display:none">


                                        <input class="field" id="nameval" value="" />

                                        <input class="field" name="RestaurantAddress" id="streetval" value="@Model.RestaurantAddress" />


                                        <input class="field" type="text" id="latval" name="lat" value="@Model.lat" />

                                        <input class="field" id="longval" name="lng" value="@Model.lng" />

                                        <input class="field" id="countryval" />

                                    </div>

                                    <div class="form-group">
                                        <label class="form-control-label" for="RestaurantName">@Resource.Restaurant_Name</label>
                                        <input step=".01" type="text" name="RestaurantName" value="@Model.RestaurantName" id="RestaurantName" class="form-control form-control-alternative" placeholder="@Resource.Restaurant_Name" required autofocus>
                                    </div>

                                    <div class="form-group">
                                        <label class="form-control-label" for="RestaurantDescription">@Resource.Restaurant_Description</label>
                                        <input step=".01" type="text" name="RestaurantDescription" value="@Model.RestaurantDescription" id="RestaurantDescription" class="form-control form-control-alternative" placeholder="@Resource.Restaurant_Description" required autofocus>
                                    </div>

                                    <div class="form-group">
                                        <label class="form-control-label" for="ThemeId">Menu Theme</label>
                                        @Html.DropDownListFor(m => m.ThemeId, ViewBag.Themes as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                                    </div>

                                    <div class="form-group">
                                        <label class="form-control-label" for="RestaurantDescription">Works from</label>
                                        @if (Model.starttime != null)
                                        {
                                            <input type="time" name="starttime" value="@Model.starttime.Value.ToString("HH:mm")" id="RestaurantDescription" class="form-control form-control-alternative" required autofocus>
                                        }
                                        else
                                        {
                                            <input type="time" name="starttime" id="RestaurantDescription" class="form-control form-control-alternative" required autofocus>
                                        }
                                    </div>

                                    <div class="form-group">
                                        <label class="form-control-label" for="RestaurantDescription">Works to</label>
                                        @if (Model.endtime!=null)
                                        {
                                            <input type="time" name="endtime" value="@Model.endtime.Value.ToString("HH:mm")" id="RestaurantDescription" class="form-control form-control-alternative" required autofocus>
                                        }
                                        else
                                        {
                                            <input type="time" name="endtime"  id="RestaurantDescription" class="form-control form-control-alternative" required autofocus>
                                        }
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group text-center">
                                                <label class="form-control-label" for="input-name">@Resource.Restaurant_Image</label>
                                                <div class="text-center">
                                                    <div class="fileinput fileinput-new" data-provides="fileinput">
                                                        <div class="fileinput-preview img-thumbnail" data-trigger="fileinput" style="width: 295px; height: 200px;">
                                                            @if (Model.RestaurantImage == "cover.jpg")
                                                            {
                                                                <img src="~/Content/images/@Model.RestaurantImage" alt="..." />
                                                            }
                                                            else
                                                            {
                                                                <img src="~/Content/images/M_@Model.id@Model.RestaurantImage" alt="..." />
                                                            }

                                                            @*<img src="~/Content/images/flayer.png" />*@
                                                        </div>

                                                        <div>
                                                            <span class="btn btn-outline-secondary btn-file">
                                                                <span class="fileinput-new">@Resource.Select_image</span>
                                                                <span class="fileinput-exists">@Resource.Change</span>
                                                                <input type="file" name="ImgFile" accept="image/x-png,image/gif,image/jpeg">
                                                            </span>
                                                            <a href="#" class="btn btn-outline-secondary fileinput-exists" data-dismiss="fileinput">@Resource.Remove</a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group text-center">
                                                <label class="form-control-label" for="input-name">@Resource.Restaurant_Cover_Image</label>
                                                <div class="text-center">
                                                    <div class="fileinput fileinput-new" data-provides="fileinput">
                                                        <div class="fileinput-preview img-thumbnail" data-trigger="fileinput" style="width: 200px; height: 100px;">
                                                            @if (Model.RestaurantCoverImage == "cover.jpg")
                                                            {
                                                                <img src="~/Content/images/@Model.RestaurantCoverImage" alt="..." />
                                                            }
                                                            else
                                                            {
                                                                <img src="~/Content/images/L_C_@Model.id@Model.RestaurantCoverImage" alt="..." />
                                                            }

                                                        </div>
                                                        <div>
                                                            <span class="btn btn-outline-secondary btn-file">
                                                                <span class="fileinput-new">@Resource.Select_image</span>
                                                                <span class="fileinput-exists">@Resource.Change</span>
                                                                <input type="file" name="CoverFile" accept="image/x-png,image/gif,image/jpeg">
                                                            </span>
                                                            <a href="#" class="btn btn-outline-secondary fileinput-exists" data-dismiss="fileinput">@Resource.Remove</a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-success mt-4">@Resource.Save</button>
                                    </div>

                                }



                                @*</form>*@
                            </div>
                            <hr />
                            <h6 class="heading-small text-muted mb-4">@Resource.Owner_information</h6>
                            <div class="pl-lg-4">
                                <div class="form-group">
                                    <label class="form-control-label" for="name_owner">@Resource.Owner_Name</label>
                                    <input type="text" name="OwnerName" id="name_owner" class="form-control form-control-alternative" placeholder="@Resource.Owner_Name" value="@Model.OwnerName" readonly>
                                </div>
                                <div class="form-group">
                                    <label class="form-control-label" for="email_owner">@Resource.Owner_Email</label>
                                    <input type="text" name="OwnerEmail" id="email_owner" class="form-control form-control-alternative" placeholder="@Resource.Owner_Email" value="@Model.OwnerEmail" readonly>
                                </div>
                                <div class="form-group">
                                    <label class="form-control-label" for="phone_owner">@Resource.Owner_Phone</label>
                                    <input type="text" name="OwnerPhone" id="phone_owner" class="form-control form-control-alternative" placeholder="@Resource.Owner_Phone" value="@Model.OwnerPhone" readonly>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-6 mb-5 mb-xl-0">
                    <br />
                    <div class="card card-profile shadow">
                        <div class="card-header">
                            <h5 class="h3 mb-0">@Resource.Restaurant_Location</h5>
                        </div>
                        <div class="card-body">
                            <div class="nav-wrapper">
                                <ul class="nav nav-pills nav-fill flex-column flex-md-row" id="tabs-icons-text" role="tablist">
                                    <li class="nav-item">
                                        <a class="nav-link mb-sm-3 mb-md-0 active" id="tabs-icons-text-1-tab" data-toggle="tab" href="#tabs-icons-text-1" role="tab" aria-controls="tabs-icons-text-1" aria-selected="true">@Resource.Location</a>
                                    </li>
                                </ul>
                            </div>
                            <div class="card shadow">
                                <div class="card-body">
                                    <div class="tab-content" id="myTabContent">
                                        <div class="tab-pane fade show active" id="tabs-icons-text-1" role="tabpanel" aria-labelledby="tabs-icons-text-1-tab">
                                            <div id="map_location" class="form-control form-control-alternative">
                                                @* ///////////////////////////////////////// *@
                                                <div id="pac-container" class="form" style="width:100%">
                                                    @if (Model.RestaurantAddress != null)
                                                    {
                                                        <input id="pac-input" class="form-control" style="width:100%" type="text" placeholder="@Resource.Enter_location" value="@Model.RestaurantAddress" />
                                                    }
                                                    else
                                                    {
                                                        <input id="pac-input" class="form-control" style="width:100%" type="text" placeholder="@Resource.Enter_location" />
                                                    }
                                                </div>

                                                <div id="map" style="width:100%; height:100%;"></div>
                                                <div id="infowindow-content">
                                                    <span id="place-name" class="title"></span><br />
                                                    <span id="place-address"></span>
                                                </div>






                                                @* ///////////////////////////////////////// *@
                                            </div>
                                        </div>
                                        @*<div class="tab-pane fade" id="tabs-icons-text-2" role="tabpanel" aria-labelledby="tabs-icons-text-2-tab">
                                                <div id="map_area" class="form-control form-control-alternative"></div>
                                                <br />
                                                <button type="button" id="clear_area" class="btn btn-danger btn-sm btn-block">Clear Delivery Area</button>
                                            </div>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <footer class="footer">
                <div class="row align-items-center justify-content-xl-between">
                </div>
            </footer>
        </div>
    </div>


    <!-- Commented because navtabs includes same script -->
    <script src="~/Content/JS/jquery.min.js"></script>
    <script src="~/Content/JS/popper.min.js"></script>
    <script src="~/Content/JS/bootstrap.bundle.min.js"></script>

    <!-- Navtabs -->
    <script src="~/Content/JS/jquery.min.js"></script>
    <script src="~/Content/JS/bootstrap-datepicker.min.js"></script>

    <!-- Nouslider -->
    <script src="~/Content/JS/nouislider.min.js"></script>

    <!-- Argon JS -->
    <script src="~/Content/JS/argon.js"></script>

    <!-- Latest compiled and minified JavaScript -->
    <script src="~/Content/JS/jasny-bootstrap.min.js"></script>
    <!-- Custom js -->
    <script src="~/Content/JS/orders.js"></script>
    <!-- Custom js -->
    <script src="~/Content/JS/mresto.js"></script>
    <!-- AJAX -->
    <!-- SELECT2 -->
    <script src="~/Content/JS/select2.js"></script>
    <script src="~/Content/JS/select2.min.js"></script>


    <!-- Google Map -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?libraries=geometry,drawing&key=">
    </script>
    <script src="~/Content/JS/rmap.js"></script>

    <!-- Import Vue -->
    <script src="~/Content/JS/vue.js"></script>

    <!-- Import AXIOS --->
    <script src="~/Content/JS/axios.min.js"></script>

    <!-- Flatpickr datepicker -->
    <script src="~/Content/JS/flatpickr.js"></script>

    <!-- OneSignal -->
    <script src="~/Content/JS/OneSignalSDK.js"></script>
    <script>
        var ONESIGNAL_APP_ID = "";
        var USER_ID = '2';
    </script>
    <script src="~/Content/JS/onesignal.js"></script>

    <script type="text/javascript">
        "use strict";
        var defaultHourFrom = "09:00";
        var defaultHourTo = "17:00";

        var timeFormat = 'AM/PM';

        function formatAMPM(date) {
            //var hours = date.getHours();
            //var minutes = date.getMinutes();
            var hours = date.split(':')[0];
            var minutes = date.split(':')[1];

            var ampm = hours >= 12 ? 'pm' : 'am';
            hours = hours % 12;
            hours = hours ? hours : 12; // the hour '0' should be '12'
            //minutes = minutes < 10 ? '0'+minutes : minutes;
            var strTime = hours + ':' + minutes + ' ' + ampm;
            return strTime;
        }

        //console.log(formatAMPM("19:05"));

        var config = {
            enableTime: true,
            dateFormat: timeFormat == "AM/PM" ? "h:i K" : "H:i",
            noCalendar: true,
            altFormat: timeFormat == "AM/PM" ? "h:i K" : "H:i",
            altInput: true,
            allowInput: true,
            time_24hr: timeFormat == "AM/PM" ? false : true,
            onChange: [
                function (selectedDates, dateStr, instance) {
                    //...
                    this._selDateStr = dateStr;
                },
            ],
            onClose: [
                function (selDates, dateStr, instance) {
                    if (this.config.allowInput && this._input.value && this._input.value !== this._selDateStr) {
                        this.setDate(this.altInput.value, false);
                    }
                }
            ]
        };

        $("input[type='checkbox'][name='days']").change(function () {


            var hourFrom = flatpickr($('#' + this.value + '_from'), config);
            var hourTo = flatpickr($('#' + this.value + '_to'), config);

            if (this.checked) {
                hourFrom.setDate(timeFormat == "AP/PM" ? formatAMPM(defaultHourFrom) : defaultHourFrom, false);
                hourTo.setDate(timeFormat == "AP/PM" ? formatAMPM(defaultHourTo) : defaultHourTo, false);
            } else {
                hourFrom.clear();
                hourTo.clear();
            }
        });

        $('input:radio[name="primer"]').change(function () {
            if ($(this).val() == 'map') {
                $("#clear_area").hide();
            } else if ($(this).val() == 'area' && isClosed) {
                $("#clear_area").show();
            }
        });

        $("#clear_area").on("click", function () {
            //remove markers
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(null);
            }

            //remove polygon
            poly.setMap(null);
            poly.setPath([]);

            poly = new google.maps.Polyline({ map: map_area, path: [], strokeColor: "#FF0000", strokeOpacity: 1.0, strokeWeight: 2 });

            path = poly.getPath();

            //update delivery path
            changeDeliveryArea(path)

            isClosed = false;
            $("#clear_area").hide();
        });

        //Initialize working hours
        function initializeWorkingHours() {
            var workingHours = { "0_from": "05:00", "0_to": "23:00", "1_from": "05:00", "1_to": "23:00", "2_from": "05:00", "2_to": "23:00", "3_from": "05:00", "3_to": "23:00", "4_from": "05:00", "4_to": "23:00", "5_from": "05:00", "5_to": "23:00", "6_from": "05:00", "6_to": "23:00" };
            if (workingHours != null) {
                Object.keys(workingHours).map((key, index) => {
                    if (workingHours[key] != null) {
                        var hour = flatpickr($('#' + key), config);
                        hour.setDate(workingHours[key], false);

                        var day_key = key.split('_')[0];
                        $('#day' + day_key).attr('checked', 'checked');
                    }
                })
            }
        }

        function getLocation(callback) {
            $.ajaxSetup({
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                }
            });

            $.ajax({
                type: 'GET',
                url: '/get/rlocation/' + $('#rid').val(),
                success: function (response) {
                    if (response.status) {
                        return callback(true, response.data)
                    }
                }, error: function (response) {
                    return callback(false, response.responseJSON.errMsg);
                }
            })
        }

        function changeLocation(lat, lng) {
            //var latConv = parseFloat(lat.toString().substr(0, 5));
            //var lngConv = parseFloat(lng.toString().substr(0, 5));
            $.ajaxSetup({
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                }
            });

            $.ajax({
                type: 'POST',
                url: '/updateres/location/' + $('#rid').val(),
                dataType: 'json',
                data: {
                    lat: lat,
                    lng: lng
                },
                success: function (response) {
                    if (response.status) {
                        console.log(response.status)
                    }
                }, error: function (response) {
                    //alert(response.responseJSON.errMsg);
                }
            })
        }

        function changeDeliveryArea(path) {

            $.ajaxSetup({
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                }
            });

            $.ajax({
                type: 'POST',
                url: '/updateres/delivery/' + $('#rid').val(),
                dataType: 'json',
                data: {
                    path: JSON.stringify(path.i)
                },
                success: function (response) {
                    if (response.status) {
                        console.log(response.status)
                    }
                }, error: function (response) {
                    //alert(response.responseJSON.errMsg);
                }
            })
        }

        function initializeMap(lat, lng) {
            var map_options = {
                zoom: 13,
                center: new google.maps.LatLng(lat, lng),
                mapTypeId: "terrain",
                scaleControl: true
            }

            map_location = new google.maps.Map(document.getElementById("map_location"), map_options);
            map_area = new google.maps.Map(document.getElementById("map_area"), map_options);
        }

        function initializeMarker(lat, lng) {
            var markerData = new google.maps.LatLng(lat, lng);
            marker = new google.maps.Marker({
                position: markerData,
                map: map_location,
                icon: start
            });
        }

        function new_delivery_area(latLng) {
            if (isClosed) return;
            markerIndex = poly.getPath().length;
            var isFirstMarker = markerIndex === 0;
            markerArea = new google.maps.Marker({ map: map_area, position: latLng, draggable: false, icon: area });

            //push markers
            markers.push(markerArea);

            if (isFirstMarker) {
                google.maps.event.addListener(markerArea, 'click', function () {
                    if (isClosed) return;
                    path = poly.getPath();
                    poly.setMap(null);
                    poly = new google.maps.Polygon({ map: map_area, path: path, strokeColor: "#FF0000", strokeOpacity: 0.8, strokeWeight: 2, fillColor: "#FF0000", fillOpacity: 0.35, editable: false });
                    isClosed = true;

                    //update delivery path
                    changeDeliveryArea(path)
                    //show button clear
                    //$("#clear_area").show();
                });
            }
            //show button clear
            $("#clear_area").show();

            google.maps.event.addListener(markerArea, 'drag', function (dragEvent) {
                poly.getPath().setAt(markerIndex, dragEvent.latLng);
            });
            poly.getPath().push(latLng);
        }

        function initialize_existing_area(area_positions) {
            for (var i = 0; i < area_positions.length; i++) {
                var markerAreaData = new google.maps.LatLng(area_positions[i].lat, area_positions[i].lng);
                markerArea = new google.maps.Marker({ map: map_area, position: markerAreaData, draggable: false, icon: area });

                //push markers
                markers.push(markerArea);

                //var path = poly.getPath();
                path = poly.getPath();

                poly.setMap(null);
                poly = new google.maps.Polygon({ map: map_area, path: path, strokeColor: "#FF0000", strokeOpacity: 0.8, strokeWeight: 2, fillColor: "#FF0000", fillOpacity: 0.35, editable: false });

                //show clear area
                isClosed = true;
                $("#clear_area").show();
                //google.maps.event.addListener(markerArea, "drag", update_polygon_closure(poly, i));
            }


        }

        var start = "https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/48/Map-Marker-Ball-Pink.png"
        var area = "https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/48/Map-Marker-Ball-Chartreuse.png"
        var map_location = null;
        var map_area = null;
        var marker = null;
        var infoWindow = null;
        var lat = null;
        var lng = null;
        var circle = null;
        var isClosed = false;
        var poly = null;
        var markers = [];
        var markerArea = null;
        var markerIndex = null;
        var path = null;

        window.onload = function () {
            //var map, infoWindow, marker, lng, lat;

            //Working hours
            initializeWorkingHours();

            getLocation(function (isFetched, currPost) {
                if (isFetched) {
                    infoWindow = new google.maps.InfoWindow;

                    if (currPost.lat != 0 && currPost.lng != 0) {
                        //initialize map
                        initializeMap(currPost.lat, currPost.lng)

                        //initialize marker
                        initializeMarker(currPost.lat, currPost.lng)

                        //var isClosed = false;

                        poly = new google.maps.Polyline({ map: map_area, path: currPost.area ? currPost.area : [], strokeColor: "#FF0000", strokeOpacity: 1.0, strokeWeight: 2 });

                        if (currPost.area != null) {
                            initialize_existing_area(currPost.area)
                        }

                        map_location.addListener('click', function (event) {
                            marker.setPosition(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));

                            changeLocation(event.latLng.lat(), event.latLng.lng());
                        });

                        map_area.addListener('click', function (event) {
                            new_delivery_area(event.latLng)
                        });
                    } else {
                        if (navigator.geolocation) {
                            navigator.geolocation.getCurrentPosition(function (position) {
                                var pos = { lat: position.coords.latitude, lng: position.coords.longitude };

                                //infoWindow.setPosition(pos);
                                //infoWindow.setContent('Location found.');
                                //infoWindow.open(map);

                                //initialize map
                                initializeMap(position.coords.latitude, position.coords.longitude)

                                //initialize marker
                                initializeMarker(position.coords.latitude, position.coords.longitude)

                                //change location in database
                                changeLocation(pos.lat, pos.lng);

                                map_location.addListener('click', function (event) {
                                    marker.setPosition(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));

                                    changeLocation(event.latLng.lat(), event.latLng.lng());
                                });

                                map_area.addListener('click', function (event) {
                                    new_delivery_area(event.latLng)
                                });
                            }, function () {
                                // handleLocationError(true, infoWindow, map.getCenter());

                                //initialize map
                                initializeMap(54.5260, 15.2551)

                                //initialize marker
                                initializeMarker(54.5260, 15.2551)

                                map_location.addListener('click', function (event) {
                                    marker.setPosition(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));

                                    changeLocation(event.latLng.lat(), event.latLng.lng());
                                });

                                map_area.addListener('click', function (event) {
                                    new_delivery_area(event.latLng)
                                });
                            });
                        } else {
                            // Browser doesn't support Geolocation
                            //handleLocationError(false, infoWindow, map.getCenter());
                        }
                    }
                }
            });
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ? 'Error: The Geolocation service failed.' : 'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
        }
    </script>
    <script>
        // This example requires the Places library. Include the libraries=places
        // parameter when you first load the API. For example:
        // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
        function initMap() {
            var map;
            @*if (@Model.lat!= null) {
                 map = new google.maps.Map(document.getElementById("map"), {
                    center: { lat: @Model.lat, lng: @Model.lng },
                    zoom: 13,
                });

            }
            else {
                 map = new google.maps.Map(document.getElementById("map"), {
                    center: { lat: 29.9751576, lng: 31.141099 },
                    zoom: 13,
                });

            }*@
            map = new google.maps.Map(document.getElementById("map"), {
                    center: { lat: @Model.lat, lng: @Model.lng },
                    zoom: 13,
                });
            const card = document.getElementById("pac-card");
            const input = document.getElementById("pac-input");
            const biasInputElement = document.getElementById("use-location-bias");
            const strictBoundsInputElement = document.getElementById(
                "use-strict-bounds"
            );
            const options = {
                componentRestrictions: { country: "eg" },
                language: 'ar',
                fields: ["formatted_address", "geometry", "name"],
                origin: map.getCenter(),
                strictBounds: false,
                types: ["establishment"],
            };
            map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);
            const autocomplete = new google.maps.places.Autocomplete(
                input,
                options
            );

            // Bind the map's bounds (viewport) property to the autocomplete object,
            // so that the autocomplete requests use the current map bounds for the
            // bounds option in the request.

            autocomplete.bindTo("bounds", map);

            const infowindow = new google.maps.InfoWindow();
            const infowindowContent = document.getElementById("infowindow-content");
            infowindow.setContent(infowindowContent);
            const marker = new google.maps.Marker({
                map,
                anchorPoint: new google.maps.Point(0, -29),
            });
            autocomplete.addListener("place_changed", () => {
                infowindow.close();
                marker.setVisible(false);
                const place = autocomplete.getPlace();

                if (!place.geometry) {
                    // User entered the name of a Place that was not suggested and
                    // pressed the Enter key, or the Place Details request failed.
                    window.alert(
                        "No details available for input: '" + place.name + "'"
                    );
                    return;
                }


                // If the place has a geometry, then present it on a map.
                if (place.geometry.viewport) {
                    console.log(place.formatted_address);//location.lat()
                    console.log(place.name);
                    console.log(place.geometry.location.lat());
                    console.log(place.geometry.location.lng());
                    console.log(place.geometry.location);
                    //===========================================================
                    document.getElementById("nameval").value = place.name;
                    document.getElementById("streetval").value = place.formatted_address;
                    document.getElementById("latval").value = place.geometry.location.lat();
                    document.getElementById("longval").value = place.geometry.location.lng();

                    // document.getElementById("countryval").value =place.formatted_address.country;

                    //======================================================
                    map.fitBounds(place.geometry.viewport);
                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(17);
                }
                marker.setPosition(place.geometry.location);
                marker.setVisible(true);
                infowindowContent.children["place-name"].textContent = place.name;
                infowindowContent.children["place-address"].textContent =
                    place.formatted_address;
                infowindow.open(map, marker);
            });

            // Sets a listener on a radio button to change the filter type on Places
            // Autocomplete.
            function setupClickListener(id, types) {
                const radioButton = document.getElementById(id);
                radioButton.addEventListener("click", () => {
                    autocomplete.setTypes(types);
                    input.value = "";
                });
            }
            setupClickListener("changetype-all", []);
            setupClickListener("changetype-address", ["address"]);
            setupClickListener("changetype-establishment", ["establishment"]);
            setupClickListener("changetype-geocode", ["geocode"]);
            biasInputElement.addEventListener("change", () => {
                if (biasInputElement.checked) {
                    autocomplete.bindTo("bounds", map);
                } else {
                    // User wants to turn off location bias, so three things need to happen:
                    // 1. Unbind from map
                    // 2. Reset the bounds to whole world
                    // 3. Uncheck the strict bounds checkbox UI (which also disables strict bounds)
                    autocomplete.unbind("bounds");
                    autocomplete.setBounds({
                        east: 180,
                        west: -180,
                        north: 90,
                        south: -90,
                    });
                    strictBoundsInputElement.checked = biasInputElement.checked;
                }
                input.value = "";
            });
            strictBoundsInputElement.addEventListener("change", () => {
                autocomplete.setOptions({
                    strictBounds: strictBoundsInputElement.checked,
                });

                if (strictBoundsInputElement.checked) {
                    biasInputElement.checked = strictBoundsInputElement.checked;
                    autocomplete.bindTo("bounds", map);
                }
                input.value = "";
            });
        }
    </script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBjCCuQL1P3qR6qti1Hh-eb5WwigF9F_84&callback=initMap&libraries=places&v=weekly"
            async></script>
    <!-- Custom JS defined by admin -->
</body>
</html>

